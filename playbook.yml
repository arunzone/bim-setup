---
- hosts: all
  vars:
    download_url: https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.gz
    protoc_archive: "protobuf-2.6.1.tar.gz"

  tasks:
    - name: Increase no of file descriptors (soft)
      become: yes
      become_method: sudo
      lineinfile: dest=/etc/security/limits.conf state=present line="* soft nofile 16374"

    - name: Increase no of file descriptors (hard)
      become: yes
      become_method: sudo
      lineinfile: dest=/etc/security/limits.conf state=present line="* hard nofile 32748"

    - name: Increase the number of inotify user watch limit
      become: yes
      become_method: sudo
      lineinfile: dest=/etc/sysctl.conf state=present line="fs.inotify.max_user_watches = 524288"

    - name: Effect file descriptors
      become: yes
      become_method: sudo
      command: sysctl -p

    - name: Download & unpack protoc
      unarchive: src={{download_url}} dest=~/ copy=no

    - name: Install all dependences of protoc
      become: yes
      become_method: sudo
      apt: pkg={{item}} update_cache=yes cache_valid_time=3600
      with_items:
        - make
        - gcc
        - g++

    - name: General | update-alternatives for cc
      alternatives: name=cc link=/usr/bin/cc path=/usr/bin/gcc-4.8
      become: yes
      become_method: sudo

    - name: General | update-alternatives for c++
      alternatives: name=c++ link=/usr/bin/c++ path=/usr/bin/g++-4.8
      become: yes
      become_method: sudo

    - name: General | update-alternatives for cpp
      alternatives: name=cpp link=/usr/bin/cpp path=/usr/bin/g++-4.8
      become: yes
      become_method: sudo

    - name: Configure protoc
      shell: ./configure chdir=/home/vagrant/protobuf-2.6.1

    - name: Compile (make) protoc
      command: make chdir=/home/vagrant/protobuf-2.6.1

    - name: Check the compilation of protoc
      shell: make check chdir=/home/vagrant/protobuf-2.6.1

    - name: Install protoc
      become: yes
      become_method: sudo
      command: make install chdir=/home/vagrant/protobuf-2.6.1

    - name: Updating ld.so.cache
      become: yes
      become_method: sudo
      command: ldconfig

    - name: Install add-apt-repostory
      become: yes
      become_method: sudo
      apt: name=software-properties-common state=latest

    - name: Add Oracle Java Repository
      become: yes
      become_method: sudo
      apt_repository: repo='ppa:webupd8team/java' update_cache=yes

    - name: Accept Java 8 License
      become: yes
      become_method: sudo
      debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'

    - name: Install Oracle Java 8
      become: yes
      become_method: sudo
      apt: name={{item}} state=latest
      with_items:
        - oracle-java8-installer
        - ca-certificates
        - oracle-java8-set-default

    - name: Create /opt directory
      file: path=/opt state=directory

    - name: Download Maven3
      become: yes
      become_method: sudo

      get_url: dest=/opt/maven3.tar.gz url=http://apache.proserve.nl/maven/maven-3/3.2.5/binaries/apache-maven-3.2.5-bin.tar.gz

    - name: Unpack Maven3
      become: yes
      become_method: sudo
      action: command creates=/opt/maven chdir=/opt tar zxvf /opt/maven3.tar.gz

    - name: Create Maven3 directory link
      become: yes
      become_method: sudo
      file: path=/opt/maven src=/opt/apache-maven-3.2.5 state=link

    - name: Set mvn link
      become: yes
      become_method: sudo
      action: command update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 1

    - name: install packages
      apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
      become: yes
      become_method: sudo
      with_items:
        - curl
        - git
        - apache2
        - xfce4
        - virtualbox-guest-dkms
        - virtualbox-guest-utils
        - virtualbox-guest-x11
        - firefox
        - postgresql

    - name: export M2_HOME
      lineinfile: dest=~/.bashrc state=present regexp='^M2_HOME.*' line='export M2_HOME="/opt/apache-maven-3.2.5"' insertbefore='^PATH.*'

    - name: export MAVEN_HOME
      lineinfile: dest=~/.bashrc state=present regexp='^MAVEN_HOME.*' line='export MAVEN_HOME="/opt/apache-maven-3.2.5"' insertbefore='^PATH.*'

    - name: Setup maven repository
      file: path=~/.m2 state=directory

    - name: Configure maven repository
      get_url: url=https://raw.githubusercontent.com/arunzone/bim-setup/master/settings.xml dest=~/.m2/settings.xml

    - name: Install nvm
      shell: >
        curl https://raw.githubusercontent.com/creationix/nvm/v0.7.0/install.sh | sh
        creates=/home/{{ ansible_user_id }}/.nvm/nvm.sh

    - name: Install node and set version
      shell: >
        /bin/bash -c "source ~/.nvm/nvm.sh && nvm install 5.7.1 && nvm alias default 5.7.1"
        creates=/home/{{ ansible_user_id }}/.nvm/alias

    - name: install npm
      become: yes
      become_method: sudo
      apt:  pkg=npm state=present

    - name: Install Grunt CLI
      become: yes
      become_method: sudo
      npm: name=grunt-cli global=yes state=present

    - name: Configure apache proxy
      become: yes
      become_method: sudo
      command: a2enmod proxy_http

    - name: Configure apache ssl
      become: yes
      become_method: sudo
      command: a2enmod ssl

    - name: Configure apache
      become: yes
      become_method: sudo
      get_url: url=https://raw.githubusercontent.com/arunzone/bim-setup/master/rp.conf dest=/etc/apache2/conf-enabled/rp.conf

    - name: Restart Apache
      service: name=apache2 state=restarted

    - name: Enable gui
      become: yes
      become_method: sudo
      lineinfile: dest=/etc/X11/Xwrapper.config regexp="^allowed_users=" line="allowed_users=anybody"

  handlers:
    - name: Restart postgresql
      service: name=postgresql state=restarted
